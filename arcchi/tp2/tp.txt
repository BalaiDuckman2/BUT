!!! NE MODIFIEZ PAS LA STRUCTURE DE CE FICHIER !!!

Nom :
Prénom :
Groupe TP :

IMPORTANT : si vous avez rencontré un problème pendant la séance, décrivez-le entre les lignes de tirets :
----------------------------------------------------------------
aucun problème rencontré (quota disque, plantage, perte du travail...) <-- ICI, PAS EN DESSOUS !!
----------------------------------------------------------------


Exercice 1.1.1 (codage de conditions)
----------------------------------------------------------------
;; programme

        ; V2 == 9 ?
        LD R0, [V2]
        CMP R0, 9
        ; V1 != V2 ?
        LD R0, [V1]
        LD R1, [V2]
        CMP R0,R1   
        ; V2 > V1 ?
        LD R0, [V1]
        LD R1, [V2]
        CMP R1,R0  
        ; V1 + 1 == 6 ?
        LD R0, [V1]
        CMP R0, 5
        ; V1 + V2 - 1 < 3 ?
        LD R0, [V1]
        ADD R0,[V2]
        CMP R0, 4
        ; V1 + 1 > V2 + 3 ?
        LD R0, [V1]
        ADD R0, 1
        LD R1, [V2]
        ADD R1, [3]
        CMP R0,R1  
        ; 2*V1 - 1 >= V1 + 2 ?
        LD R0, [V1]
        CMP R0, 3
        ; 12 == 17 ?
        ; non mais ça va pas ? cette condition toujours fausse n'est pas à coder !

        ; fin du programme
        HLT

;; variables du programme
V1:     RB 1    ; RB 1 = réserver 1 octet non initialisé
V2:     RB 1    ; RB 1 = réserver 1 octet non initialisé
----------------------------------------------------------------


Exercice 2 (chiffre hexadécimal)
----------------------------------------------------------------
;; programme
        ; lire un nombre sur le port 10 et le mettre dans N1
        IN  R0, 10
        ST  R0, [N1]

        ; partie à programmer
        ; if (N1 < 16) {
        ;     N2 = N1 + 55 ; 55='A'-10
        ; }
        ; if (N1 <= 9) {
        ;     N2 = N1 + '0'
        ; }
        ; if (N1 > 15) {
        ;     N2 = '?'
        ; }
        
        si1: 
            LD R0, [N1]
            CMP R0,16
            BHS finsi1
        alors1:
            LD R0, [N1]
            ADD R0,55
            ST R0, [N2]
        finsi1:


        si2: 
            LD R0, [N1]
            CMP R0,9
            BGT finsi2
        alors2:
            LD R0, [N1]
            ADD R0, '0'
            ST R0, [N1]
        finsi2:

        si3: 
            LD R0, [N1]
            CMP R0,15
            BLE finsi3
        alors3:
            LD R0, '?'
            ST R0, [N2]
        finsi3:



        ; afficher N2 sur le port 11
        LD  R0, 11      ; passer le DSKY en mode 11
        OUT R0, 255
        LD  R0, [N2]    ; R0 = valeur de N2
        OUT R0, 11      ; R0 = code ascii => affichage du caractère
        ; fin du programme
        HLT

;; variables du programme
N1:     RB 1    ; RB 1 = réserver 1 octet non initialisé
N2:     DB '@'
----------------------------------------------------------------


Exercice 3 (division euclidienne)
----------------------------------------------------------------
;; division euclidienne d'un entier par un autre
        ; lire un nombre sur le port 10 et le mettre dans N1
        IN  R0, 10
        ST  R0, [N1]
        ; lire un autre nombre sur le port 10 et le mettre dans N2
        IN  R0, 10
        ST  R0, [N2]

        ; partie à programmer
        ; if (N2 > 0) {
        ;     Q = 0
        ;     while (N1 >= N2) {
        ;         N1 = N1 - N2
        ;         Q  = Q + 1
        ;     }
        ; } else {
        ;     Q = 255
        ;     N1 = 255
        ; }

        si1: 
            LD R0, [N2]
            CMP R0,0
            BLS sinon1
        alors1:
            LD R1, 0
            ST R1, [Q]
            tantque:
                LD R1, [N1]
                CMP R1,R0
                BLO fintanque
            faire:
                SUB R1, [N2]
                ST R1, [N1]
                LD R1, [Q]
                ADD R1, 1
                ST R1, [Q]
                BRA tantque
            fintanque:
            BRA finsi1
        sinon1:
            LD R1, 255
            ST R1, [Q]
            ST R1, [N1]
            
        finsi1:


        ; afficher Q puis N1 sur le port 10
        LD  R0, [Q]
        OUT R0, 10
        LD  R0, [N1]
        OUT R0, 10
        ; fin du programme
        HLT

;; variables du programme
N1:     RB 1
N2:     RB 1
Q:      RB 1
---------------------------------------------------------------


Exercice 4 (PGCD)
----------------------------------------------------------------
;; calcul du PGCD de deux entiers (non signés)
        ; lire un nombre sur le port 10 et le mettre dans N1
        IN  R0, 10
        ST  R0, [N1]
        ; lire un autre nombre sur le port 10 et le mettre dans N2
        IN  R0, 10
        ST  R0, [N2]

        ; partie à programmer
        ; while (N1 != N2) {
        ;     if (N1 > N2) {
        ;         N1 = N1 - N2
        ;     } else {
        ;         N2 = N2 - N1
        ;     }
        ; }
        tantque:
            LD R1, [N1]
            CMP R1, R0
            BEQ fintanque
        faire:
            si:
                CMP R1,R0
                BLS sinon
            alors:
                SUB R1, [N2]
                ST R1, [N1]

                BRA finsi
            sinon:
                SUB R0, [N1]
                ST R0, [N2]
            finsi:
            BRA tantque
        fintanque:

        ; afficher N1 sur le port 10
        LD  R0, [N1]
        OUT R0, 10
        ; fin du programme
        HLT

;; variables du programme
N1:     RB 1
N2:     RB 1
----------------------------------------------------------------


Exercice 5 (méthode de Héron)
----------------------------------------------------------------
;; calcul de la racine carrée d'un entier par la méthode de Héron
        ; lire un nombre sur le port 10 et le mettre dans N
        ; NB: ce nombre est nécessairement non signé : 0..255
        IN  R0, 10
        ST  R0, [N]
        LSR R0          ; n = N/2 pour le point de départ
        ST  R0, [n]

        ; partie à programmer
        ; i=8
        ; répéter {

       

        ;     i = i - 1;
        ; } jusqu'à (i==0);

        LD R1,8
        ST R1,[i]
        repeter:
            LD  R0, [N]     ; R0 = N
            DIV R0, [n]     ; R0 = N/n
            ADD R0, [n]     ; R0 = (N/n) + N
            LSR R0          ; R0 = ((N/n) + N) / 2
            ST  R0, [n]     ; n = ((N/n) + N) / 2   
           
            SUB R1,1
            ST R1,[i]
            CMP R1,0
            BNE repeter
        finrepeter:


        ; afficher n sur le port 10
        LD  R0, [n]
        OUT R0, 10
        ; fin du programme
        HLT

;; variables du programme
N:      RB 1
n:      RB 1
i:      RB 1
----------------------------------------------------------------